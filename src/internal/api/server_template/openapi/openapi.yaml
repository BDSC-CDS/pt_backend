openapi: 3.0.1
info:
  contact:
    email: development.bdsc@chuv.ch
    name: pt backend audit log service
    url: https://pt-backend.rdeid.unil.ch
  title: pt backend
  version: "1.0"
servers:
- url: /
security:
- Bearer: []
- {}
tags:
- name: AuditLogService
- name: AuthenticationService
- name: ConfigService
- name: DatasetService
- name: IndexService
- name: UserService
paths:
  /api/rest/v1/authentication/login:
    post:
      description: This endpoint authenticates a user
      operationId: authentication_service_authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templatebackendCredentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendAuthenticationReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Authenticate
      tags:
      - Authentication
      x-openapi-router-controller: authentication_controller
      x-codegen-request-body-name: body
  /api/rest/v1/configs/{id}:
    get:
      description: This endpoint returns a configuration file for a given user
      operationId: config_service_get_config
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendGetConfigReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get a configuration file
      tags:
      - Configuration
      x-openapi-router-controller: config_generator_controller
  /api/rest/v1/users:
    post:
      description: This endpoint creates a user
      operationId: user_service_create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templatebackendUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendCreateUserReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Create a user
      tags:
      - Users
      x-openapi-router-controller: user_controller
      x-codegen-request-body-name: body
  /api/rest/v1/users/me:
    get:
      description: This endpoint returns the details of the authenticated user
      operationId: user_service_get_user_me
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendGetUserMeReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get my own user
      tags:
      - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/me/password:
    put:
      description: This endpoint updates the password of the authenticated user
      operationId: user_service_update_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templatebackendUpdatePasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendUpdatePasswordReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Update password
      tags:
      - Users
      x-openapi-router-controller: user_controller
      x-codegen-request-body-name: body
  /api/rest/v1/users/{id}:
    delete:
      description: This endpoint deletes a user
      operationId: user_service_delete_user
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendDeleteUserReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Delete a user
      tags:
      - Users
      x-openapi-router-controller: user_controller
    get:
      description: This endpoint returns a user
      operationId: user_service_get_user
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendGetUserReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get a user
      tags:
      - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/{id}/password/reset:
    post:
      description: This endpoint resets a user's password
      operationId: user_service_reset_password
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendResetPasswordReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Reset password
      tags:
      - Users
      x-openapi-router-controller: user_controller
      x-codegen-request-body-name: body
  /api/v1/audit/logs:
    get:
      description: Gets a list of logs.
      operationId: audit_log_service_get_logs
      parameters:
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendGetLogsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get logs
      tags:
      - AuditLog
      x-openapi-router-controller: audit_log_controller
  /api/v1/audit/users/{userid}/logs:
    get:
      description: Gets logs for a specific user.
      operationId: audit_log_service_get_logs_for_user
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendGetLogsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get logs for a user
      tags:
      - AuditLog
      x-openapi-router-controller: audit_log_controller
  /api/v1/dataset:
    get:
      description: This endpoint allows listing a user's datasets
      operationId: dataset_service_list_datasets
      parameters:
      - in: query
        name: offset
        schema:
          format: int64
          type: integer
      - in: query
        name: limit
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendListDatasetsReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List datasets
      tags:
      - Dataset
      x-openapi-router-controller: dataset_controller
    post:
      description: This endpoint stores a dataset
      operationId: dataset_service_store_dataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templatebackendStoreDatasetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendStoreDatasetReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Store a dataset
      tags:
      - Dataset
      x-openapi-router-controller: dataset_controller
      x-codegen-request-body-name: body
  /api/v1/dataset/content/{id}:
    get:
      description: This endpoint allow getting a specific user's Dataset Content
      operationId: dataset_service_get_dataset_content
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendGetDatasetContentReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get Dataset Content
      tags:
      - Dataset
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/metadata/{id}:
    get:
      description: This endpoint allow getting a specific user's Dataset Metadata
      operationId: dataset_service_get_dataset_metadata
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendGetDatasetMetadataReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get Dataset Metadata
      tags:
      - Dataset
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/{id}:
    delete:
      description: This endpoint deletes a dataset
      operationId: dataset_service_delete_dataset
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendDeleteDatasetReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Deletes a dataset
      tags:
      - Dataset
      x-openapi-router-controller: dataset_controller
  /api/v1/hello:
    get:
      description: This endpoint returns a hello
      operationId: index_service_get_hello
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendGetHelloReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get a hello
      tags:
      - Index
      x-openapi-router-controller: index_controller
  /api/v1/hello/{identifier}:
    post:
      description: This endpoint returns a hello
      operationId: index_service_create_hello
      parameters:
      - in: path
        name: identifier
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexService_CreateHello_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templatebackendCreateHelloReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get a hello
      tags:
      - Index
      x-openapi-router-controller: index_controller
      x-codegen-request-body-name: body
components:
  schemas:
    protobufAny:
      additionalProperties:
        type: object
      properties:
        '@type':
          type: string
      title: protobufAny
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          title: code
          type: integer
        message:
          title: message
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          title: details
          type: array
      title: rpcStatus
      type: object
    templatebackendAuditLog:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        service: service
        response: response
        action: action
        id: 0
        body: body
        error: true
        userid: 6
      properties:
        id:
          format: int32
          title: id
          type: integer
        userid:
          format: int32
          title: userid
          type: integer
        service:
          title: service
          type: string
        action:
          title: action
          type: string
        body:
          title: body
          type: string
        response:
          title: response
          type: string
        createdAt:
          format: date-time
          title: createdAt
          type: string
        error:
          title: error
          type: boolean
      title: templatebackendAuditLog
      type: object
    templatebackendAuthenticationReply:
      example:
        result:
          token: token
      properties:
        result:
          $ref: '#/components/schemas/templatebackendAuthenticationResult'
      title: templatebackendAuthenticationReply
      type: object
    templatebackendAuthenticationResult:
      example:
        token: token
      properties:
        token:
          title: token
          type: string
      title: templatebackendAuthenticationResult
      type: object
    templatebackendColumn:
      example:
        value:
        - value
        - value
      properties:
        value:
          items:
            type: string
          title: value
          type: array
      title: templatebackendColumn
      type: object
    templatebackendConfig:
      example:
        hassubFieldList: true
        subFieldListReplacement: subFieldListReplacement
        subFieldListFields:
        - subFieldListFields
        - subFieldListFields
        subFieldRegexRegex: subFieldRegexRegex
        hasDateShift: true
        hassubFieldRegex: true
        scrambleFieldFields:
        - scrambleFieldFields
        - scrambleFieldFields
        questionnaireid: 6
        dateShiftLowrange: 1
        hasScrambleField: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        dateShiftHighrange: 5
        id: 0
        subFieldListSubstitute:
        - subFieldListSubstitute
        - subFieldListSubstitute
        subFieldRegexFields:
        - subFieldRegexFields
        - subFieldRegexFields
        subFieldRegexReplacement: subFieldRegexReplacement
      properties:
        id:
          format: int64
          title: id
          type: integer
        questionnaireid:
          format: int64
          title: questionnaireid
          type: integer
        hasScrambleField:
          title: hasScrambleField
          type: boolean
        hasDateShift:
          title: hasDateShift
          type: boolean
        hassubFieldList:
          title: hassubFieldList
          type: boolean
        hassubFieldRegex:
          title: hassubFieldRegex
          type: boolean
        scrambleFieldFields:
          items:
            type: string
          title: scrambleFieldFields
          type: array
        dateShiftLowrange:
          format: int32
          title: dateShiftLowrange
          type: integer
        dateShiftHighrange:
          format: int32
          title: dateShiftHighrange
          type: integer
        subFieldListFields:
          items:
            type: string
          title: subFieldListFields
          type: array
        subFieldListSubstitute:
          items:
            type: string
          title: subFieldListSubstitute
          type: array
        subFieldListReplacement:
          title: subFieldListReplacement
          type: string
        subFieldRegexFields:
          items:
            type: string
          title: subFieldRegexFields
          type: array
        subFieldRegexRegex:
          title: subFieldRegexRegex
          type: string
        subFieldRegexReplacement:
          title: subFieldRegexReplacement
          type: string
        createdAt:
          format: date-time
          title: createdAt
          type: string
      title: templatebackendConfig
      type: object
    templatebackendCreateHelloReply:
      example:
        identifier: 0
        title: title
        content: content
      properties:
        identifier:
          format: int32
          title: identifier
          type: integer
        title:
          title: title
          type: string
        content:
          title: content
          type: string
      title: templatebackendCreateHelloReply
      type: object
    templatebackendCreateUserReply:
      example:
        result:
          id: 0
      properties:
        result:
          $ref: '#/components/schemas/templatebackendCreateUserResult'
      title: Create Users
      type: object
    templatebackendCreateUserResult:
      example:
        id: 0
      properties:
        id:
          format: int64
          title: id
          type: integer
      title: templatebackendCreateUserResult
      type: object
    templatebackendCredentials:
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
        totp:
          title: totp
          type: string
      title: templatebackendCredentials
      type: object
    templatebackendDataset:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        tenantid: 1
        datasetName: datasetName
        id: 0
        userid: 6
      properties:
        id:
          format: int64
          title: id
          type: integer
        userid:
          format: int64
          title: userid
          type: integer
        tenantid:
          format: int64
          title: tenantid
          type: integer
        datasetName:
          title: datasetName
          type: string
        createdAt:
          format: date-time
          title: createdAt
          type: string
        deletedAt:
          format: date-time
          title: deletedAt
          type: string
      title: templatebackendDataset
      type: object
    templatebackendDeleteDatasetReply:
      example:
        result:
          success: true
      properties:
        result:
          $ref: '#/components/schemas/templatebackendDeleteDatasetResult'
      title: templatebackendDeleteDatasetReply
      type: object
    templatebackendDeleteDatasetResult:
      example:
        success: true
      properties:
        success:
          title: success
          type: boolean
      title: templatebackendDeleteDatasetResult
      type: object
    templatebackendDeleteUserReply:
      example:
        result: "{}"
      properties:
        result:
          title: result
          type: object
      title: templatebackendDeleteUserReply
      type: object
    templatebackendDeleteUserResult:
      title: result
      type: object
    templatebackendGetConfigReply:
      example:
        result:
          config:
            hassubFieldList: true
            subFieldListReplacement: subFieldListReplacement
            subFieldListFields:
            - subFieldListFields
            - subFieldListFields
            subFieldRegexRegex: subFieldRegexRegex
            hasDateShift: true
            hassubFieldRegex: true
            scrambleFieldFields:
            - scrambleFieldFields
            - scrambleFieldFields
            questionnaireid: 6
            dateShiftLowrange: 1
            hasScrambleField: true
            createdAt: 2000-01-23T04:56:07.000+00:00
            dateShiftHighrange: 5
            id: 0
            subFieldListSubstitute:
            - subFieldListSubstitute
            - subFieldListSubstitute
            subFieldRegexFields:
            - subFieldRegexFields
            - subFieldRegexFields
            subFieldRegexReplacement: subFieldRegexReplacement
      properties:
        result:
          $ref: '#/components/schemas/templatebackendGetConfigResult'
      title: templatebackendGetConfigReply
      type: object
    templatebackendGetConfigResult:
      example:
        config:
          hassubFieldList: true
          subFieldListReplacement: subFieldListReplacement
          subFieldListFields:
          - subFieldListFields
          - subFieldListFields
          subFieldRegexRegex: subFieldRegexRegex
          hasDateShift: true
          hassubFieldRegex: true
          scrambleFieldFields:
          - scrambleFieldFields
          - scrambleFieldFields
          questionnaireid: 6
          dateShiftLowrange: 1
          hasScrambleField: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          dateShiftHighrange: 5
          id: 0
          subFieldListSubstitute:
          - subFieldListSubstitute
          - subFieldListSubstitute
          subFieldRegexFields:
          - subFieldRegexFields
          - subFieldRegexFields
          subFieldRegexReplacement: subFieldRegexReplacement
      properties:
        config:
          $ref: '#/components/schemas/templatebackendConfig'
      title: templatebackendGetConfigResult
      type: object
    templatebackendGetDatasetContentReply:
      example:
        result:
          columns:
          - value:
            - value
            - value
          - value:
            - value
            - value
      properties:
        result:
          $ref: '#/components/schemas/templatebackendGetDatasetContentResult'
      title: templatebackendGetDatasetContentReply
      type: object
    templatebackendGetDatasetContentResult:
      example:
        columns:
        - value:
          - value
          - value
        - value:
          - value
          - value
      properties:
        columns:
          items:
            $ref: '#/components/schemas/templatebackendColumn'
          title: columns
          type: array
      title: templatebackendGetDatasetContentResult
      type: object
    templatebackendGetDatasetMetadataReply:
      example:
        metadata:
          metadata:
          - columnId: 5
            tenantid: 6
            datasetId: 1
            type: type
            userid: 0
            columnName: columnName
          - columnId: 5
            tenantid: 6
            datasetId: 1
            type: type
            userid: 0
            columnName: columnName
      properties:
        metadata:
          $ref: '#/components/schemas/templatebackendGetDatasetMetadataResult'
      title: templatebackendGetDatasetMetadataReply
      type: object
    templatebackendGetDatasetMetadataResult:
      example:
        metadata:
        - columnId: 5
          tenantid: 6
          datasetId: 1
          type: type
          userid: 0
          columnName: columnName
        - columnId: 5
          tenantid: 6
          datasetId: 1
          type: type
          userid: 0
          columnName: columnName
      properties:
        metadata:
          items:
            $ref: '#/components/schemas/templatebackendMetadata'
          title: metadata
          type: array
      title: templatebackendGetDatasetMetadataResult
      type: object
    templatebackendGetHelloReply:
      example:
        content: content
      properties:
        content:
          title: content
          type: string
      title: templatebackendGetHelloReply
      type: object
    templatebackendGetLogsResponse:
      example:
        logs:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          service: service
          response: response
          action: action
          id: 0
          body: body
          error: true
          userid: 6
        - createdAt: 2000-01-23T04:56:07.000+00:00
          service: service
          response: response
          action: action
          id: 0
          body: body
          error: true
          userid: 6
      properties:
        logs:
          items:
            $ref: '#/components/schemas/templatebackendAuditLog'
          title: logs
          type: array
      title: templatebackendGetLogsResponse
      type: object
    templatebackendGetUserMeReply:
      example:
        result:
          me:
            lastName: lastName
            roles:
            - roles
            - roles
            totpEnabled: true
            firstName: firstName
            createdAt: 2000-01-23T04:56:07.000+00:00
            password: password
            passwordChanged: true
            tenantid: 6
            id: 0
            email: email
            username: username
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        result:
          $ref: '#/components/schemas/templatebackendGetUserMeResult'
      title: templatebackendGetUserMeReply
      type: object
    templatebackendGetUserMeResult:
      example:
        me:
          lastName: lastName
          roles:
          - roles
          - roles
          totpEnabled: true
          firstName: firstName
          createdAt: 2000-01-23T04:56:07.000+00:00
          password: password
          passwordChanged: true
          tenantid: 6
          id: 0
          email: email
          username: username
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        me:
          $ref: '#/components/schemas/templatebackendUser'
      title: Get User (me)
      type: object
    templatebackendGetUserReply:
      example:
        result:
          user:
            lastName: lastName
            roles:
            - roles
            - roles
            totpEnabled: true
            firstName: firstName
            createdAt: 2000-01-23T04:56:07.000+00:00
            password: password
            passwordChanged: true
            tenantid: 6
            id: 0
            email: email
            username: username
            status: status
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        result:
          $ref: '#/components/schemas/templatebackendGetUserResult'
      title: templatebackendGetUserReply
      type: object
    templatebackendGetUserResult:
      example:
        user:
          lastName: lastName
          roles:
          - roles
          - roles
          totpEnabled: true
          firstName: firstName
          createdAt: 2000-01-23T04:56:07.000+00:00
          password: password
          passwordChanged: true
          tenantid: 6
          id: 0
          email: email
          username: username
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        user:
          $ref: '#/components/schemas/templatebackendUser'
      title: templatebackendGetUserResult
      type: object
    templatebackendListDatasetsReply:
      example:
        result:
          Datasets:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            tenantid: 1
            datasetName: datasetName
            id: 0
            userid: 6
          - createdAt: 2000-01-23T04:56:07.000+00:00
            deletedAt: 2000-01-23T04:56:07.000+00:00
            tenantid: 1
            datasetName: datasetName
            id: 0
            userid: 6
      properties:
        result:
          $ref: '#/components/schemas/templatebackendListDatasetsResult'
      title: templatebackendListDatasetsReply
      type: object
    templatebackendListDatasetsResult:
      example:
        Datasets:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          tenantid: 1
          datasetName: datasetName
          id: 0
          userid: 6
        - createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          tenantid: 1
          datasetName: datasetName
          id: 0
          userid: 6
      properties:
        Datasets:
          items:
            $ref: '#/components/schemas/templatebackendDataset'
          title: Datasets
          type: array
      title: templatebackendListDatasetsResult
      type: object
    templatebackendMetadata:
      example:
        columnId: 5
        tenantid: 6
        datasetId: 1
        type: type
        userid: 0
        columnName: columnName
      properties:
        userid:
          format: int64
          title: userid
          type: integer
        tenantid:
          format: int64
          title: tenantid
          type: integer
        datasetId:
          format: int64
          title: datasetId
          type: integer
        columnId:
          format: int64
          title: columnId
          type: integer
        columnName:
          title: columnName
          type: string
        type:
          title: type
          type: string
      title: templatebackendMetadata
      type: object
    templatebackendResetPasswordReply:
      example:
        result: "{}"
      properties:
        result:
          title: result
          type: object
      title: templatebackendResetPasswordReply
      type: object
    templatebackendResetPasswordResult:
      title: result
      type: object
    templatebackendStoreDatasetReply:
      example:
        result:
          id: 0
      properties:
        result:
          $ref: '#/components/schemas/templatebackendStoreDatasetResult'
      title: templatebackendStoreDatasetReply
      type: object
    templatebackendStoreDatasetRequest:
      properties:
        datasetName:
          title: datasetName
          type: string
        dataset:
          title: dataset
          type: string
        types:
          title: types
          type: string
      title: Create a Dataset
      type: object
    templatebackendStoreDatasetResult:
      example:
        id: 0
      properties:
        id:
          format: int64
          title: id
          type: integer
      title: templatebackendStoreDatasetResult
      type: object
    templatebackendUpdatePasswordReply:
      example:
        result: "{}"
      properties:
        result:
          title: result
          type: object
      title: templatebackendUpdatePasswordReply
      type: object
    templatebackendUpdatePasswordRequest:
      properties:
        currentPassword:
          title: currentPassword
          type: string
        newPassword:
          title: newPassword
          type: string
      title: Update User Password
      type: object
    templatebackendUpdateUserResult:
      title: result
      type: object
    templatebackendUser:
      example:
        lastName: lastName
        roles:
        - roles
        - roles
        totpEnabled: true
        firstName: firstName
        createdAt: 2000-01-23T04:56:07.000+00:00
        password: password
        passwordChanged: true
        tenantid: 6
        id: 0
        email: email
        username: username
        status: status
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          title: id
          type: integer
        tenantid:
          format: int64
          title: tenantid
          type: integer
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        username:
          title: username
          type: string
        email:
          title: email
          type: string
        password:
          title: password
          type: string
        status:
          title: status
          type: string
        roles:
          items:
            type: string
          title: roles
          type: array
        totpEnabled:
          title: totpEnabled
          type: boolean
        createdAt:
          format: date-time
          title: createdAt
          type: string
        updatedAt:
          format: date-time
          title: updatedAt
          type: string
        passwordChanged:
          title: passwordChanged
          type: boolean
      title: templatebackendUser
      type: object
    IndexService_CreateHello_request:
      properties:
        title:
          title: title
          type: string
        content:
          title: content
          type: string
      title: IndexService_CreateHello_request
      type: object
  securitySchemes:
    Bearer:
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: server_template.controllers.security_controller.info_from_Bearer
x-original-swagger-version: "2.0"
