"""NOTE: Autogenerated. Do not edit the manually."""

import unittest

from flask import json

from server_template.models.rpc_status import RpcStatus
from server_template.models.templatebackend_create_medication_reply import TemplatebackendCreateMedicationReply
from server_template.models.templatebackend_create_medication_request import TemplatebackendCreateMedicationRequest
from server_template.models.templatebackend_delete_medication_reply import TemplatebackendDeleteMedicationReply
from server_template.models.templatebackend_get_medication_reply import TemplatebackendGetMedicationReply
from server_template.models.templatebackend_list_medication_reply import TemplatebackendListMedicationReply
from server_template.test import BaseTestCase


class TestMedicationController(BaseTestCase):
    """MedicationController integration test stubs"""

    def test_medication_service_create_medication(self):
        """Test case for medication_service_create_medication

        Create a medication
        """
        body = server_template.TemplatebackendCreateMedicationRequest()
        headers = { 
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Bearer': 'special-key',
        }
        response = self.client.open(
            '/api/v1/medication',
            method='POST',
            headers=headers,
            data=json.dumps(body),
            content_type='application/json')
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))

    def test_medication_service_delete_medication(self):
        """Test case for medication_service_delete_medication

        Create a medication
        """
        headers = { 
            'Accept': 'application/json',
            'Bearer': 'special-key',
        }
        response = self.client.open(
            '/api/v1/medication/{id}'.format(id='id_example'),
            method='DELETE',
            headers=headers)
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))

    def test_medication_service_get_medication(self):
        """Test case for medication_service_get_medication

        Get medications
        """
        headers = { 
            'Accept': 'application/json',
            'Bearer': 'special-key',
        }
        response = self.client.open(
            '/api/v1/medication/{id}'.format(id=56),
            method='GET',
            headers=headers)
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))

    def test_medication_service_list_medication(self):
        """Test case for medication_service_list_medication

        List medications
        """
        query_string = [('offset', 56),
                        ('limit', 56)]
        headers = { 
            'Accept': 'application/json',
            'Bearer': 'special-key',
        }
        response = self.client.open(
            '/api/v1/medication',
            method='GET',
            headers=headers,
            query_string=query_string)
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))


if __name__ == '__main__':
    unittest.main()
