"""NOTE: Autogenerated. Do not edit the manually."""

import unittest

from flask import json

from server_template.models.rpc_status import RpcStatus
from server_template.models.v1_get_logs_response import V1GetLogsResponse
from server_template.models.v1_log_event_request import V1LogEventRequest
from server_template.models.v1_log_event_response import V1LogEventResponse
from server_template.test import BaseTestCase


class TestAuditLogController(BaseTestCase):
    """AuditLogController integration test stubs"""

    def test_audit_log_service_get_logs(self):
        """Test case for audit_log_service_get_logs

        Get logs
        """
        query_string = [('offset', 56),
                        ('limit', 56)]
        headers = { 
            'Accept': 'application/json',
            'Bearer': 'special-key',
        }
        response = self.client.open(
            '/api/v1/audit/logs',
            method='GET',
            headers=headers,
            query_string=query_string)
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))

    def test_audit_log_service_get_logs_for_user(self):
        """Test case for audit_log_service_get_logs_for_user

        Get logs for a user
        """
        query_string = [('offset', 56),
                        ('limit', 56)]
        headers = { 
            'Accept': 'application/json',
            'Bearer': 'special-key',
        }
        response = self.client.open(
            '/api/v1/audit/users/{userid}/logs'.format(userid=56),
            method='GET',
            headers=headers,
            query_string=query_string)
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))

    def test_audit_log_service_log_event(self):
        """Test case for audit_log_service_log_event

        Log an event
        """
        body = server_template.V1LogEventRequest()
        headers = { 
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Bearer': 'special-key',
        }
        response = self.client.open(
            '/api/v1/audit/logEvent',
            method='POST',
            headers=headers,
            data=json.dumps(body),
            content_type='application/json')
        self.assert200(response,
                       'Response body is : ' + response.data.decode('utf-8'))


if __name__ == '__main__':
    unittest.main()
