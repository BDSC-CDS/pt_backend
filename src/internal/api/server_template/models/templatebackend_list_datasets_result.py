"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_dataset import TemplatebackendDataset
from server_template import util

from server_template.models.templatebackend_dataset import TemplatebackendDataset

class TemplatebackendListDatasetsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datasets=None):
        """TemplatebackendListDatasetsResult - a model defined in OpenAPI

        :param datasets: The datasets of this TemplatebackendListDatasetsResult.
        :type datasets: List[TemplatebackendDataset]
        """
        self.openapi_types = {
            'datasets': List[TemplatebackendDataset]
        }

        self.attribute_map = {
            'datasets': 'Datasets'
        }

        self._datasets = datasets

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendListDatasetsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendListDatasetsResult of this TemplatebackendListDatasetsResult.
        :rtype: TemplatebackendListDatasetsResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datasets(self) -> List[TemplatebackendDataset]:
        """Gets the datasets of this TemplatebackendListDatasetsResult.


        :return: The datasets of this TemplatebackendListDatasetsResult.
        :rtype: List[TemplatebackendDataset]
        """
        return self._datasets

    @datasets.setter
    def datasets(self, datasets: List[TemplatebackendDataset]):
        """Sets the datasets of this TemplatebackendListDatasetsResult.


        :param datasets: The datasets of this TemplatebackendListDatasetsResult.
        :type datasets: List[TemplatebackendDataset]
        """

        self._datasets = datasets
