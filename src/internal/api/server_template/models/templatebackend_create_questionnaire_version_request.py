"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_questionnaire_version import TemplatebackendQuestionnaireVersion
from server_template import util

from server_template.models.templatebackend_questionnaire_version import TemplatebackendQuestionnaireVersion

class TemplatebackendCreateQuestionnaireVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, version=None):
        """TemplatebackendCreateQuestionnaireVersionRequest - a model defined in OpenAPI

        :param id: The id of this TemplatebackendCreateQuestionnaireVersionRequest.
        :type id: int
        :param version: The version of this TemplatebackendCreateQuestionnaireVersionRequest.
        :type version: TemplatebackendQuestionnaireVersion
        """
        self.openapi_types = {
            'id': int,
            'version': TemplatebackendQuestionnaireVersion
        }

        self.attribute_map = {
            'id': 'id',
            'version': 'version'
        }

        self._id = id
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendCreateQuestionnaireVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendCreateQuestionnaireVersionRequest of this TemplatebackendCreateQuestionnaireVersionRequest.
        :rtype: TemplatebackendCreateQuestionnaireVersionRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this TemplatebackendCreateQuestionnaireVersionRequest.


        :return: The id of this TemplatebackendCreateQuestionnaireVersionRequest.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this TemplatebackendCreateQuestionnaireVersionRequest.


        :param id: The id of this TemplatebackendCreateQuestionnaireVersionRequest.
        :type id: int
        """

        self._id = id

    @property
    def version(self) -> TemplatebackendQuestionnaireVersion:
        """Gets the version of this TemplatebackendCreateQuestionnaireVersionRequest.


        :return: The version of this TemplatebackendCreateQuestionnaireVersionRequest.
        :rtype: TemplatebackendQuestionnaireVersion
        """
        return self._version

    @version.setter
    def version(self, version: TemplatebackendQuestionnaireVersion):
        """Sets the version of this TemplatebackendCreateQuestionnaireVersionRequest.


        :param version: The version of this TemplatebackendCreateQuestionnaireVersionRequest.
        :type version: TemplatebackendQuestionnaireVersion
        """

        self._version = version
