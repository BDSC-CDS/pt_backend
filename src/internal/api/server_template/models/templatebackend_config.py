"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template import util


class TemplatebackendConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, questionnaireid=None, has_scramble_field=None, has_date_shift=None, hassub_field_list=None, hassub_field_regex=None, scramble_field_fields=None, date_shift_lowrange=None, date_shift_highrange=None, sub_field_list_fields=None, sub_field_list_substitute=None, sub_field_list_replacement=None, sub_field_regex_fields=None, sub_field_regex_regex=None, sub_field_regex_replacement=None, created_at=None):
        """TemplatebackendConfig - a model defined in OpenAPI

        :param id: The id of this TemplatebackendConfig.
        :type id: int
        :param questionnaireid: The questionnaireid of this TemplatebackendConfig.
        :type questionnaireid: int
        :param has_scramble_field: The has_scramble_field of this TemplatebackendConfig.
        :type has_scramble_field: bool
        :param has_date_shift: The has_date_shift of this TemplatebackendConfig.
        :type has_date_shift: bool
        :param hassub_field_list: The hassub_field_list of this TemplatebackendConfig.
        :type hassub_field_list: bool
        :param hassub_field_regex: The hassub_field_regex of this TemplatebackendConfig.
        :type hassub_field_regex: bool
        :param scramble_field_fields: The scramble_field_fields of this TemplatebackendConfig.
        :type scramble_field_fields: List[str]
        :param date_shift_lowrange: The date_shift_lowrange of this TemplatebackendConfig.
        :type date_shift_lowrange: int
        :param date_shift_highrange: The date_shift_highrange of this TemplatebackendConfig.
        :type date_shift_highrange: int
        :param sub_field_list_fields: The sub_field_list_fields of this TemplatebackendConfig.
        :type sub_field_list_fields: List[str]
        :param sub_field_list_substitute: The sub_field_list_substitute of this TemplatebackendConfig.
        :type sub_field_list_substitute: List[str]
        :param sub_field_list_replacement: The sub_field_list_replacement of this TemplatebackendConfig.
        :type sub_field_list_replacement: str
        :param sub_field_regex_fields: The sub_field_regex_fields of this TemplatebackendConfig.
        :type sub_field_regex_fields: List[str]
        :param sub_field_regex_regex: The sub_field_regex_regex of this TemplatebackendConfig.
        :type sub_field_regex_regex: str
        :param sub_field_regex_replacement: The sub_field_regex_replacement of this TemplatebackendConfig.
        :type sub_field_regex_replacement: str
        :param created_at: The created_at of this TemplatebackendConfig.
        :type created_at: datetime
        """
        self.openapi_types = {
            'id': int,
            'questionnaireid': int,
            'has_scramble_field': bool,
            'has_date_shift': bool,
            'hassub_field_list': bool,
            'hassub_field_regex': bool,
            'scramble_field_fields': List[str],
            'date_shift_lowrange': int,
            'date_shift_highrange': int,
            'sub_field_list_fields': List[str],
            'sub_field_list_substitute': List[str],
            'sub_field_list_replacement': str,
            'sub_field_regex_fields': List[str],
            'sub_field_regex_regex': str,
            'sub_field_regex_replacement': str,
            'created_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'questionnaireid': 'questionnaireid',
            'has_scramble_field': 'hasScrambleField',
            'has_date_shift': 'hasDateShift',
            'hassub_field_list': 'hassubFieldList',
            'hassub_field_regex': 'hassubFieldRegex',
            'scramble_field_fields': 'scrambleFieldFields',
            'date_shift_lowrange': 'dateShiftLowrange',
            'date_shift_highrange': 'dateShiftHighrange',
            'sub_field_list_fields': 'subFieldListFields',
            'sub_field_list_substitute': 'subFieldListSubstitute',
            'sub_field_list_replacement': 'subFieldListReplacement',
            'sub_field_regex_fields': 'subFieldRegexFields',
            'sub_field_regex_regex': 'subFieldRegexRegex',
            'sub_field_regex_replacement': 'subFieldRegexReplacement',
            'created_at': 'createdAt'
        }

        self._id = id
        self._questionnaireid = questionnaireid
        self._has_scramble_field = has_scramble_field
        self._has_date_shift = has_date_shift
        self._hassub_field_list = hassub_field_list
        self._hassub_field_regex = hassub_field_regex
        self._scramble_field_fields = scramble_field_fields
        self._date_shift_lowrange = date_shift_lowrange
        self._date_shift_highrange = date_shift_highrange
        self._sub_field_list_fields = sub_field_list_fields
        self._sub_field_list_substitute = sub_field_list_substitute
        self._sub_field_list_replacement = sub_field_list_replacement
        self._sub_field_regex_fields = sub_field_regex_fields
        self._sub_field_regex_regex = sub_field_regex_regex
        self._sub_field_regex_replacement = sub_field_regex_replacement
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendConfig of this TemplatebackendConfig.
        :rtype: TemplatebackendConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this TemplatebackendConfig.


        :return: The id of this TemplatebackendConfig.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this TemplatebackendConfig.


        :param id: The id of this TemplatebackendConfig.
        :type id: int
        """

        self._id = id

    @property
    def questionnaireid(self) -> int:
        """Gets the questionnaireid of this TemplatebackendConfig.


        :return: The questionnaireid of this TemplatebackendConfig.
        :rtype: int
        """
        return self._questionnaireid

    @questionnaireid.setter
    def questionnaireid(self, questionnaireid: int):
        """Sets the questionnaireid of this TemplatebackendConfig.


        :param questionnaireid: The questionnaireid of this TemplatebackendConfig.
        :type questionnaireid: int
        """

        self._questionnaireid = questionnaireid

    @property
    def has_scramble_field(self) -> bool:
        """Gets the has_scramble_field of this TemplatebackendConfig.


        :return: The has_scramble_field of this TemplatebackendConfig.
        :rtype: bool
        """
        return self._has_scramble_field

    @has_scramble_field.setter
    def has_scramble_field(self, has_scramble_field: bool):
        """Sets the has_scramble_field of this TemplatebackendConfig.


        :param has_scramble_field: The has_scramble_field of this TemplatebackendConfig.
        :type has_scramble_field: bool
        """

        self._has_scramble_field = has_scramble_field

    @property
    def has_date_shift(self) -> bool:
        """Gets the has_date_shift of this TemplatebackendConfig.


        :return: The has_date_shift of this TemplatebackendConfig.
        :rtype: bool
        """
        return self._has_date_shift

    @has_date_shift.setter
    def has_date_shift(self, has_date_shift: bool):
        """Sets the has_date_shift of this TemplatebackendConfig.


        :param has_date_shift: The has_date_shift of this TemplatebackendConfig.
        :type has_date_shift: bool
        """

        self._has_date_shift = has_date_shift

    @property
    def hassub_field_list(self) -> bool:
        """Gets the hassub_field_list of this TemplatebackendConfig.


        :return: The hassub_field_list of this TemplatebackendConfig.
        :rtype: bool
        """
        return self._hassub_field_list

    @hassub_field_list.setter
    def hassub_field_list(self, hassub_field_list: bool):
        """Sets the hassub_field_list of this TemplatebackendConfig.


        :param hassub_field_list: The hassub_field_list of this TemplatebackendConfig.
        :type hassub_field_list: bool
        """

        self._hassub_field_list = hassub_field_list

    @property
    def hassub_field_regex(self) -> bool:
        """Gets the hassub_field_regex of this TemplatebackendConfig.


        :return: The hassub_field_regex of this TemplatebackendConfig.
        :rtype: bool
        """
        return self._hassub_field_regex

    @hassub_field_regex.setter
    def hassub_field_regex(self, hassub_field_regex: bool):
        """Sets the hassub_field_regex of this TemplatebackendConfig.


        :param hassub_field_regex: The hassub_field_regex of this TemplatebackendConfig.
        :type hassub_field_regex: bool
        """

        self._hassub_field_regex = hassub_field_regex

    @property
    def scramble_field_fields(self) -> List[str]:
        """Gets the scramble_field_fields of this TemplatebackendConfig.


        :return: The scramble_field_fields of this TemplatebackendConfig.
        :rtype: List[str]
        """
        return self._scramble_field_fields

    @scramble_field_fields.setter
    def scramble_field_fields(self, scramble_field_fields: List[str]):
        """Sets the scramble_field_fields of this TemplatebackendConfig.


        :param scramble_field_fields: The scramble_field_fields of this TemplatebackendConfig.
        :type scramble_field_fields: List[str]
        """

        self._scramble_field_fields = scramble_field_fields

    @property
    def date_shift_lowrange(self) -> int:
        """Gets the date_shift_lowrange of this TemplatebackendConfig.


        :return: The date_shift_lowrange of this TemplatebackendConfig.
        :rtype: int
        """
        return self._date_shift_lowrange

    @date_shift_lowrange.setter
    def date_shift_lowrange(self, date_shift_lowrange: int):
        """Sets the date_shift_lowrange of this TemplatebackendConfig.


        :param date_shift_lowrange: The date_shift_lowrange of this TemplatebackendConfig.
        :type date_shift_lowrange: int
        """

        self._date_shift_lowrange = date_shift_lowrange

    @property
    def date_shift_highrange(self) -> int:
        """Gets the date_shift_highrange of this TemplatebackendConfig.


        :return: The date_shift_highrange of this TemplatebackendConfig.
        :rtype: int
        """
        return self._date_shift_highrange

    @date_shift_highrange.setter
    def date_shift_highrange(self, date_shift_highrange: int):
        """Sets the date_shift_highrange of this TemplatebackendConfig.


        :param date_shift_highrange: The date_shift_highrange of this TemplatebackendConfig.
        :type date_shift_highrange: int
        """

        self._date_shift_highrange = date_shift_highrange

    @property
    def sub_field_list_fields(self) -> List[str]:
        """Gets the sub_field_list_fields of this TemplatebackendConfig.


        :return: The sub_field_list_fields of this TemplatebackendConfig.
        :rtype: List[str]
        """
        return self._sub_field_list_fields

    @sub_field_list_fields.setter
    def sub_field_list_fields(self, sub_field_list_fields: List[str]):
        """Sets the sub_field_list_fields of this TemplatebackendConfig.


        :param sub_field_list_fields: The sub_field_list_fields of this TemplatebackendConfig.
        :type sub_field_list_fields: List[str]
        """

        self._sub_field_list_fields = sub_field_list_fields

    @property
    def sub_field_list_substitute(self) -> List[str]:
        """Gets the sub_field_list_substitute of this TemplatebackendConfig.


        :return: The sub_field_list_substitute of this TemplatebackendConfig.
        :rtype: List[str]
        """
        return self._sub_field_list_substitute

    @sub_field_list_substitute.setter
    def sub_field_list_substitute(self, sub_field_list_substitute: List[str]):
        """Sets the sub_field_list_substitute of this TemplatebackendConfig.


        :param sub_field_list_substitute: The sub_field_list_substitute of this TemplatebackendConfig.
        :type sub_field_list_substitute: List[str]
        """

        self._sub_field_list_substitute = sub_field_list_substitute

    @property
    def sub_field_list_replacement(self) -> str:
        """Gets the sub_field_list_replacement of this TemplatebackendConfig.


        :return: The sub_field_list_replacement of this TemplatebackendConfig.
        :rtype: str
        """
        return self._sub_field_list_replacement

    @sub_field_list_replacement.setter
    def sub_field_list_replacement(self, sub_field_list_replacement: str):
        """Sets the sub_field_list_replacement of this TemplatebackendConfig.


        :param sub_field_list_replacement: The sub_field_list_replacement of this TemplatebackendConfig.
        :type sub_field_list_replacement: str
        """

        self._sub_field_list_replacement = sub_field_list_replacement

    @property
    def sub_field_regex_fields(self) -> List[str]:
        """Gets the sub_field_regex_fields of this TemplatebackendConfig.


        :return: The sub_field_regex_fields of this TemplatebackendConfig.
        :rtype: List[str]
        """
        return self._sub_field_regex_fields

    @sub_field_regex_fields.setter
    def sub_field_regex_fields(self, sub_field_regex_fields: List[str]):
        """Sets the sub_field_regex_fields of this TemplatebackendConfig.


        :param sub_field_regex_fields: The sub_field_regex_fields of this TemplatebackendConfig.
        :type sub_field_regex_fields: List[str]
        """

        self._sub_field_regex_fields = sub_field_regex_fields

    @property
    def sub_field_regex_regex(self) -> str:
        """Gets the sub_field_regex_regex of this TemplatebackendConfig.


        :return: The sub_field_regex_regex of this TemplatebackendConfig.
        :rtype: str
        """
        return self._sub_field_regex_regex

    @sub_field_regex_regex.setter
    def sub_field_regex_regex(self, sub_field_regex_regex: str):
        """Sets the sub_field_regex_regex of this TemplatebackendConfig.


        :param sub_field_regex_regex: The sub_field_regex_regex of this TemplatebackendConfig.
        :type sub_field_regex_regex: str
        """

        self._sub_field_regex_regex = sub_field_regex_regex

    @property
    def sub_field_regex_replacement(self) -> str:
        """Gets the sub_field_regex_replacement of this TemplatebackendConfig.


        :return: The sub_field_regex_replacement of this TemplatebackendConfig.
        :rtype: str
        """
        return self._sub_field_regex_replacement

    @sub_field_regex_replacement.setter
    def sub_field_regex_replacement(self, sub_field_regex_replacement: str):
        """Sets the sub_field_regex_replacement of this TemplatebackendConfig.


        :param sub_field_regex_replacement: The sub_field_regex_replacement of this TemplatebackendConfig.
        :type sub_field_regex_replacement: str
        """

        self._sub_field_regex_replacement = sub_field_regex_replacement

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this TemplatebackendConfig.


        :return: The created_at of this TemplatebackendConfig.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this TemplatebackendConfig.


        :param created_at: The created_at of this TemplatebackendConfig.
        :type created_at: datetime
        """

        self._created_at = created_at
