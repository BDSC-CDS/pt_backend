"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template import util


class TemplatebackendQuestionnaireQuestionAnswerRulePrefill(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, question_id=None, answer_id=None, answer_text=None, tmp_question_uuid=None, tmp_answer_uuid=None, created_at=None, updated_at=None):
        """TemplatebackendQuestionnaireQuestionAnswerRulePrefill - a model defined in OpenAPI

        :param id: The id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type id: int
        :param question_id: The question_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type question_id: int
        :param answer_id: The answer_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type answer_id: int
        :param answer_text: The answer_text of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type answer_text: str
        :param tmp_question_uuid: The tmp_question_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type tmp_question_uuid: str
        :param tmp_answer_uuid: The tmp_answer_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type tmp_answer_uuid: str
        :param created_at: The created_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type created_at: datetime
        :param updated_at: The updated_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': int,
            'question_id': int,
            'answer_id': int,
            'answer_text': str,
            'tmp_question_uuid': str,
            'tmp_answer_uuid': str,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'question_id': 'questionId',
            'answer_id': 'answerId',
            'answer_text': 'answerText',
            'tmp_question_uuid': 'tmpQuestionUUID',
            'tmp_answer_uuid': 'tmpAnswerUUID',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._question_id = question_id
        self._answer_id = answer_id
        self._answer_text = answer_text
        self._tmp_question_uuid = tmp_question_uuid
        self._tmp_answer_uuid = tmp_answer_uuid
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendQuestionnaireQuestionAnswerRulePrefill':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendQuestionnaireQuestionAnswerRulePrefill of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: TemplatebackendQuestionnaireQuestionAnswerRulePrefill
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :return: The id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :param id: The id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type id: int
        """

        self._id = id

    @property
    def question_id(self) -> int:
        """Gets the question_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :return: The question_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: int
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id: int):
        """Sets the question_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :param question_id: The question_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type question_id: int
        """

        self._question_id = question_id

    @property
    def answer_id(self) -> int:
        """Gets the answer_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :return: The answer_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: int
        """
        return self._answer_id

    @answer_id.setter
    def answer_id(self, answer_id: int):
        """Sets the answer_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :param answer_id: The answer_id of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type answer_id: int
        """

        self._answer_id = answer_id

    @property
    def answer_text(self) -> str:
        """Gets the answer_text of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :return: The answer_text of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: str
        """
        return self._answer_text

    @answer_text.setter
    def answer_text(self, answer_text: str):
        """Sets the answer_text of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :param answer_text: The answer_text of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type answer_text: str
        """

        self._answer_text = answer_text

    @property
    def tmp_question_uuid(self) -> str:
        """Gets the tmp_question_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :return: The tmp_question_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: str
        """
        return self._tmp_question_uuid

    @tmp_question_uuid.setter
    def tmp_question_uuid(self, tmp_question_uuid: str):
        """Sets the tmp_question_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :param tmp_question_uuid: The tmp_question_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type tmp_question_uuid: str
        """

        self._tmp_question_uuid = tmp_question_uuid

    @property
    def tmp_answer_uuid(self) -> str:
        """Gets the tmp_answer_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :return: The tmp_answer_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: str
        """
        return self._tmp_answer_uuid

    @tmp_answer_uuid.setter
    def tmp_answer_uuid(self, tmp_answer_uuid: str):
        """Sets the tmp_answer_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :param tmp_answer_uuid: The tmp_answer_uuid of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type tmp_answer_uuid: str
        """

        self._tmp_answer_uuid = tmp_answer_uuid

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :return: The created_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :param created_at: The created_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :return: The updated_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.


        :param updated_at: The updated_at of this TemplatebackendQuestionnaireQuestionAnswerRulePrefill.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
