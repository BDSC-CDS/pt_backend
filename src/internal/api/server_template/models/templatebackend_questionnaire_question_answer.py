"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_questionnaire_question_answer_rule_prefill import TemplatebackendQuestionnaireQuestionAnswerRulePrefill
from server_template import util

from server_template.models.templatebackend_questionnaire_question_answer_rule_prefill import TemplatebackendQuestionnaireQuestionAnswerRulePrefill

class TemplatebackendQuestionnaireQuestionAnswer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, text=None, risk_level=None, high_risk=None, rule_prefills=None, created_at=None, updated_at=None):
        """TemplatebackendQuestionnaireQuestionAnswer - a model defined in OpenAPI

        :param id: The id of this TemplatebackendQuestionnaireQuestionAnswer.
        :type id: int
        :param text: The text of this TemplatebackendQuestionnaireQuestionAnswer.
        :type text: str
        :param risk_level: The risk_level of this TemplatebackendQuestionnaireQuestionAnswer.
        :type risk_level: int
        :param high_risk: The high_risk of this TemplatebackendQuestionnaireQuestionAnswer.
        :type high_risk: bool
        :param rule_prefills: The rule_prefills of this TemplatebackendQuestionnaireQuestionAnswer.
        :type rule_prefills: List[TemplatebackendQuestionnaireQuestionAnswerRulePrefill]
        :param created_at: The created_at of this TemplatebackendQuestionnaireQuestionAnswer.
        :type created_at: datetime
        :param updated_at: The updated_at of this TemplatebackendQuestionnaireQuestionAnswer.
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': int,
            'text': str,
            'risk_level': int,
            'high_risk': bool,
            'rule_prefills': List[TemplatebackendQuestionnaireQuestionAnswerRulePrefill],
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'text': 'text',
            'risk_level': 'riskLevel',
            'high_risk': 'highRisk',
            'rule_prefills': 'rulePrefills',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._text = text
        self._risk_level = risk_level
        self._high_risk = high_risk
        self._rule_prefills = rule_prefills
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendQuestionnaireQuestionAnswer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendQuestionnaireQuestionAnswer of this TemplatebackendQuestionnaireQuestionAnswer.
        :rtype: TemplatebackendQuestionnaireQuestionAnswer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this TemplatebackendQuestionnaireQuestionAnswer.


        :return: The id of this TemplatebackendQuestionnaireQuestionAnswer.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this TemplatebackendQuestionnaireQuestionAnswer.


        :param id: The id of this TemplatebackendQuestionnaireQuestionAnswer.
        :type id: int
        """

        self._id = id

    @property
    def text(self) -> str:
        """Gets the text of this TemplatebackendQuestionnaireQuestionAnswer.


        :return: The text of this TemplatebackendQuestionnaireQuestionAnswer.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this TemplatebackendQuestionnaireQuestionAnswer.


        :param text: The text of this TemplatebackendQuestionnaireQuestionAnswer.
        :type text: str
        """

        self._text = text

    @property
    def risk_level(self) -> int:
        """Gets the risk_level of this TemplatebackendQuestionnaireQuestionAnswer.


        :return: The risk_level of this TemplatebackendQuestionnaireQuestionAnswer.
        :rtype: int
        """
        return self._risk_level

    @risk_level.setter
    def risk_level(self, risk_level: int):
        """Sets the risk_level of this TemplatebackendQuestionnaireQuestionAnswer.


        :param risk_level: The risk_level of this TemplatebackendQuestionnaireQuestionAnswer.
        :type risk_level: int
        """

        self._risk_level = risk_level

    @property
    def high_risk(self) -> bool:
        """Gets the high_risk of this TemplatebackendQuestionnaireQuestionAnswer.


        :return: The high_risk of this TemplatebackendQuestionnaireQuestionAnswer.
        :rtype: bool
        """
        return self._high_risk

    @high_risk.setter
    def high_risk(self, high_risk: bool):
        """Sets the high_risk of this TemplatebackendQuestionnaireQuestionAnswer.


        :param high_risk: The high_risk of this TemplatebackendQuestionnaireQuestionAnswer.
        :type high_risk: bool
        """

        self._high_risk = high_risk

    @property
    def rule_prefills(self) -> List[TemplatebackendQuestionnaireQuestionAnswerRulePrefill]:
        """Gets the rule_prefills of this TemplatebackendQuestionnaireQuestionAnswer.


        :return: The rule_prefills of this TemplatebackendQuestionnaireQuestionAnswer.
        :rtype: List[TemplatebackendQuestionnaireQuestionAnswerRulePrefill]
        """
        return self._rule_prefills

    @rule_prefills.setter
    def rule_prefills(self, rule_prefills: List[TemplatebackendQuestionnaireQuestionAnswerRulePrefill]):
        """Sets the rule_prefills of this TemplatebackendQuestionnaireQuestionAnswer.


        :param rule_prefills: The rule_prefills of this TemplatebackendQuestionnaireQuestionAnswer.
        :type rule_prefills: List[TemplatebackendQuestionnaireQuestionAnswerRulePrefill]
        """

        self._rule_prefills = rule_prefills

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this TemplatebackendQuestionnaireQuestionAnswer.


        :return: The created_at of this TemplatebackendQuestionnaireQuestionAnswer.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this TemplatebackendQuestionnaireQuestionAnswer.


        :param created_at: The created_at of this TemplatebackendQuestionnaireQuestionAnswer.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this TemplatebackendQuestionnaireQuestionAnswer.


        :return: The updated_at of this TemplatebackendQuestionnaireQuestionAnswer.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this TemplatebackendQuestionnaireQuestionAnswer.


        :param updated_at: The updated_at of this TemplatebackendQuestionnaireQuestionAnswer.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
