"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template import util


class V1AuditLog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, userid=None, service=None, action=None, body=None, response=None, created_at=None, error=None):
        """V1AuditLog - a model defined in OpenAPI

        :param id: The id of this V1AuditLog.
        :type id: int
        :param userid: The userid of this V1AuditLog.
        :type userid: int
        :param service: The service of this V1AuditLog.
        :type service: str
        :param action: The action of this V1AuditLog.
        :type action: str
        :param body: The body of this V1AuditLog.
        :type body: str
        :param response: The response of this V1AuditLog.
        :type response: str
        :param created_at: The created_at of this V1AuditLog.
        :type created_at: datetime
        :param error: The error of this V1AuditLog.
        :type error: bool
        """
        self.openapi_types = {
            'id': int,
            'userid': int,
            'service': str,
            'action': str,
            'body': str,
            'response': str,
            'created_at': datetime,
            'error': bool
        }

        self.attribute_map = {
            'id': 'id',
            'userid': 'userid',
            'service': 'service',
            'action': 'action',
            'body': 'body',
            'response': 'response',
            'created_at': 'createdAt',
            'error': 'error'
        }

        self._id = id
        self._userid = userid
        self._service = service
        self._action = action
        self._body = body
        self._response = response
        self._created_at = created_at
        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'V1AuditLog':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The v1AuditLog of this V1AuditLog.
        :rtype: V1AuditLog
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this V1AuditLog.


        :return: The id of this V1AuditLog.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this V1AuditLog.


        :param id: The id of this V1AuditLog.
        :type id: int
        """

        self._id = id

    @property
    def userid(self) -> int:
        """Gets the userid of this V1AuditLog.


        :return: The userid of this V1AuditLog.
        :rtype: int
        """
        return self._userid

    @userid.setter
    def userid(self, userid: int):
        """Sets the userid of this V1AuditLog.


        :param userid: The userid of this V1AuditLog.
        :type userid: int
        """

        self._userid = userid

    @property
    def service(self) -> str:
        """Gets the service of this V1AuditLog.


        :return: The service of this V1AuditLog.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service: str):
        """Sets the service of this V1AuditLog.


        :param service: The service of this V1AuditLog.
        :type service: str
        """

        self._service = service

    @property
    def action(self) -> str:
        """Gets the action of this V1AuditLog.


        :return: The action of this V1AuditLog.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action: str):
        """Sets the action of this V1AuditLog.


        :param action: The action of this V1AuditLog.
        :type action: str
        """

        self._action = action

    @property
    def body(self) -> str:
        """Gets the body of this V1AuditLog.


        :return: The body of this V1AuditLog.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body: str):
        """Sets the body of this V1AuditLog.


        :param body: The body of this V1AuditLog.
        :type body: str
        """

        self._body = body

    @property
    def response(self) -> str:
        """Gets the response of this V1AuditLog.


        :return: The response of this V1AuditLog.
        :rtype: str
        """
        return self._response

    @response.setter
    def response(self, response: str):
        """Sets the response of this V1AuditLog.


        :param response: The response of this V1AuditLog.
        :type response: str
        """

        self._response = response

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this V1AuditLog.


        :return: The created_at of this V1AuditLog.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this V1AuditLog.


        :param created_at: The created_at of this V1AuditLog.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def error(self) -> bool:
        """Gets the error of this V1AuditLog.


        :return: The error of this V1AuditLog.
        :rtype: bool
        """
        return self._error

    @error.setter
    def error(self, error: bool):
        """Sets the error of this V1AuditLog.


        :param error: The error of this V1AuditLog.
        :type error: bool
        """

        self._error = error
