"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_column import TemplatebackendColumn
from server_template import util

from server_template.models.templatebackend_column import TemplatebackendColumn

class TemplatebackendGetDatasetContentResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns=None):
        """TemplatebackendGetDatasetContentResult - a model defined in OpenAPI

        :param columns: The columns of this TemplatebackendGetDatasetContentResult.
        :type columns: List[TemplatebackendColumn]
        """
        self.openapi_types = {
            'columns': List[TemplatebackendColumn]
        }

        self.attribute_map = {
            'columns': 'columns'
        }

        self._columns = columns

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendGetDatasetContentResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendGetDatasetContentResult of this TemplatebackendGetDatasetContentResult.
        :rtype: TemplatebackendGetDatasetContentResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self) -> List[TemplatebackendColumn]:
        """Gets the columns of this TemplatebackendGetDatasetContentResult.


        :return: The columns of this TemplatebackendGetDatasetContentResult.
        :rtype: List[TemplatebackendColumn]
        """
        return self._columns

    @columns.setter
    def columns(self, columns: List[TemplatebackendColumn]):
        """Sets the columns of this TemplatebackendGetDatasetContentResult.


        :param columns: The columns of this TemplatebackendGetDatasetContentResult.
        :type columns: List[TemplatebackendColumn]
        """

        self._columns = columns
