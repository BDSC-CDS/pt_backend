"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
import re
from server_template import util

import re

class TemplatebackendGetDatasetContentResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataframe=None):
        """TemplatebackendGetDatasetContentResult - a model defined in OpenAPI

        :param dataframe: The dataframe of this TemplatebackendGetDatasetContentResult.
        :type dataframe: str
        """
        self.openapi_types = {
            'dataframe': str
        }

        self.attribute_map = {
            'dataframe': 'dataframe'
        }

        self._dataframe = dataframe

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendGetDatasetContentResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendGetDatasetContentResult of this TemplatebackendGetDatasetContentResult.
        :rtype: TemplatebackendGetDatasetContentResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataframe(self) -> str:
        """Gets the dataframe of this TemplatebackendGetDatasetContentResult.


        :return: The dataframe of this TemplatebackendGetDatasetContentResult.
        :rtype: str
        """
        return self._dataframe

    @dataframe.setter
    def dataframe(self, dataframe: str):
        """Sets the dataframe of this TemplatebackendGetDatasetContentResult.


        :param dataframe: The dataframe of this TemplatebackendGetDatasetContentResult.
        :type dataframe: str
        """
        if dataframe is not None and not re.search(r'^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$', dataframe):
            raise ValueError("Invalid value for `dataframe`, must be a follow pattern or equal to `/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/`")

        self._dataframe = dataframe
