"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_metadata import TemplatebackendMetadata
from server_template import util

from server_template.models.templatebackend_metadata import TemplatebackendMetadata

class TemplatebackendGetDatasetMetadataResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata=None):
        """TemplatebackendGetDatasetMetadataResult - a model defined in OpenAPI

        :param metadata: The metadata of this TemplatebackendGetDatasetMetadataResult.
        :type metadata: TemplatebackendMetadata
        """
        self.openapi_types = {
            'metadata': TemplatebackendMetadata
        }

        self.attribute_map = {
            'metadata': 'metadata'
        }

        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendGetDatasetMetadataResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendGetDatasetMetadataResult of this TemplatebackendGetDatasetMetadataResult.
        :rtype: TemplatebackendGetDatasetMetadataResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self) -> TemplatebackendMetadata:
        """Gets the metadata of this TemplatebackendGetDatasetMetadataResult.


        :return: The metadata of this TemplatebackendGetDatasetMetadataResult.
        :rtype: TemplatebackendMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: TemplatebackendMetadata):
        """Sets the metadata of this TemplatebackendGetDatasetMetadataResult.


        :param metadata: The metadata of this TemplatebackendGetDatasetMetadataResult.
        :type metadata: TemplatebackendMetadata
        """

        self._metadata = metadata
