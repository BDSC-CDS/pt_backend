"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_questionnaire_reply import TemplatebackendQuestionnaireReply
from server_template import util

from server_template.models.templatebackend_questionnaire_reply import TemplatebackendQuestionnaireReply

class TemplatebackendListRepliesResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replies=None):
        """TemplatebackendListRepliesResult - a model defined in OpenAPI

        :param replies: The replies of this TemplatebackendListRepliesResult.
        :type replies: List[TemplatebackendQuestionnaireReply]
        """
        self.openapi_types = {
            'replies': List[TemplatebackendQuestionnaireReply]
        }

        self.attribute_map = {
            'replies': 'replies'
        }

        self._replies = replies

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendListRepliesResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendListRepliesResult of this TemplatebackendListRepliesResult.
        :rtype: TemplatebackendListRepliesResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replies(self) -> List[TemplatebackendQuestionnaireReply]:
        """Gets the replies of this TemplatebackendListRepliesResult.


        :return: The replies of this TemplatebackendListRepliesResult.
        :rtype: List[TemplatebackendQuestionnaireReply]
        """
        return self._replies

    @replies.setter
    def replies(self, replies: List[TemplatebackendQuestionnaireReply]):
        """Sets the replies of this TemplatebackendListRepliesResult.


        :param replies: The replies of this TemplatebackendListRepliesResult.
        :type replies: List[TemplatebackendQuestionnaireReply]
        """

        self._replies = replies
