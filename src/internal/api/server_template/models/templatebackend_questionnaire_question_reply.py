"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template import util


class TemplatebackendQuestionnaireQuestionReply(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, questionnaire_question_id=None, answer=None, created_at=None, updated_at=None):
        """TemplatebackendQuestionnaireQuestionReply - a model defined in OpenAPI

        :param id: The id of this TemplatebackendQuestionnaireQuestionReply.
        :type id: int
        :param questionnaire_question_id: The questionnaire_question_id of this TemplatebackendQuestionnaireQuestionReply.
        :type questionnaire_question_id: int
        :param answer: The answer of this TemplatebackendQuestionnaireQuestionReply.
        :type answer: str
        :param created_at: The created_at of this TemplatebackendQuestionnaireQuestionReply.
        :type created_at: datetime
        :param updated_at: The updated_at of this TemplatebackendQuestionnaireQuestionReply.
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': int,
            'questionnaire_question_id': int,
            'answer': str,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'questionnaire_question_id': 'questionnaireQuestionId',
            'answer': 'answer',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._questionnaire_question_id = questionnaire_question_id
        self._answer = answer
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendQuestionnaireQuestionReply':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendQuestionnaireQuestionReply of this TemplatebackendQuestionnaireQuestionReply.
        :rtype: TemplatebackendQuestionnaireQuestionReply
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this TemplatebackendQuestionnaireQuestionReply.


        :return: The id of this TemplatebackendQuestionnaireQuestionReply.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this TemplatebackendQuestionnaireQuestionReply.


        :param id: The id of this TemplatebackendQuestionnaireQuestionReply.
        :type id: int
        """

        self._id = id

    @property
    def questionnaire_question_id(self) -> int:
        """Gets the questionnaire_question_id of this TemplatebackendQuestionnaireQuestionReply.


        :return: The questionnaire_question_id of this TemplatebackendQuestionnaireQuestionReply.
        :rtype: int
        """
        return self._questionnaire_question_id

    @questionnaire_question_id.setter
    def questionnaire_question_id(self, questionnaire_question_id: int):
        """Sets the questionnaire_question_id of this TemplatebackendQuestionnaireQuestionReply.


        :param questionnaire_question_id: The questionnaire_question_id of this TemplatebackendQuestionnaireQuestionReply.
        :type questionnaire_question_id: int
        """

        self._questionnaire_question_id = questionnaire_question_id

    @property
    def answer(self) -> str:
        """Gets the answer of this TemplatebackendQuestionnaireQuestionReply.


        :return: The answer of this TemplatebackendQuestionnaireQuestionReply.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer: str):
        """Sets the answer of this TemplatebackendQuestionnaireQuestionReply.


        :param answer: The answer of this TemplatebackendQuestionnaireQuestionReply.
        :type answer: str
        """

        self._answer = answer

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this TemplatebackendQuestionnaireQuestionReply.


        :return: The created_at of this TemplatebackendQuestionnaireQuestionReply.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this TemplatebackendQuestionnaireQuestionReply.


        :param created_at: The created_at of this TemplatebackendQuestionnaireQuestionReply.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this TemplatebackendQuestionnaireQuestionReply.


        :return: The updated_at of this TemplatebackendQuestionnaireQuestionReply.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this TemplatebackendQuestionnaireQuestionReply.


        :param updated_at: The updated_at of this TemplatebackendQuestionnaireQuestionReply.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
