"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template import util


class TemplatebackendTransformDatasetResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset=None):
        """TemplatebackendTransformDatasetResult - a model defined in OpenAPI

        :param dataset: The dataset of this TemplatebackendTransformDatasetResult.
        :type dataset: str
        """
        self.openapi_types = {
            'dataset': str
        }

        self.attribute_map = {
            'dataset': 'dataset'
        }

        self._dataset = dataset

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendTransformDatasetResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendTransformDatasetResult of this TemplatebackendTransformDatasetResult.
        :rtype: TemplatebackendTransformDatasetResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset(self) -> str:
        """Gets the dataset of this TemplatebackendTransformDatasetResult.


        :return: The dataset of this TemplatebackendTransformDatasetResult.
        :rtype: str
        """
        return self._dataset

    @dataset.setter
    def dataset(self, dataset: str):
        """Sets the dataset of this TemplatebackendTransformDatasetResult.


        :param dataset: The dataset of this TemplatebackendTransformDatasetResult.
        :type dataset: str
        """

        self._dataset = dataset
