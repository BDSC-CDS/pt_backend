"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_audit_log import TemplatebackendAuditLog
from server_template import util

from server_template.models.templatebackend_audit_log import TemplatebackendAuditLog

class TemplatebackendGetLogsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, logs=None):
        """TemplatebackendGetLogsResponse - a model defined in OpenAPI

        :param logs: The logs of this TemplatebackendGetLogsResponse.
        :type logs: List[TemplatebackendAuditLog]
        """
        self.openapi_types = {
            'logs': List[TemplatebackendAuditLog]
        }

        self.attribute_map = {
            'logs': 'logs'
        }

        self._logs = logs

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendGetLogsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendGetLogsResponse of this TemplatebackendGetLogsResponse.
        :rtype: TemplatebackendGetLogsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def logs(self) -> List[TemplatebackendAuditLog]:
        """Gets the logs of this TemplatebackendGetLogsResponse.


        :return: The logs of this TemplatebackendGetLogsResponse.
        :rtype: List[TemplatebackendAuditLog]
        """
        return self._logs

    @logs.setter
    def logs(self, logs: List[TemplatebackendAuditLog]):
        """Sets the logs of this TemplatebackendGetLogsResponse.


        :param logs: The logs of this TemplatebackendGetLogsResponse.
        :type logs: List[TemplatebackendAuditLog]
        """

        self._logs = logs
