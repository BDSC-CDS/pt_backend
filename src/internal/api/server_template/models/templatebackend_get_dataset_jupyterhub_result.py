"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template import util


class TemplatebackendGetDatasetJupyterhubResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url=None):
        """TemplatebackendGetDatasetJupyterhubResult - a model defined in OpenAPI

        :param url: The url of this TemplatebackendGetDatasetJupyterhubResult.
        :type url: str
        """
        self.openapi_types = {
            'url': str
        }

        self.attribute_map = {
            'url': 'url'
        }

        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendGetDatasetJupyterhubResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendGetDatasetJupyterhubResult of this TemplatebackendGetDatasetJupyterhubResult.
        :rtype: TemplatebackendGetDatasetJupyterhubResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """Gets the url of this TemplatebackendGetDatasetJupyterhubResult.


        :return: The url of this TemplatebackendGetDatasetJupyterhubResult.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this TemplatebackendGetDatasetJupyterhubResult.


        :param url: The url of this TemplatebackendGetDatasetJupyterhubResult.
        :type url: str
        """

        self._url = url
