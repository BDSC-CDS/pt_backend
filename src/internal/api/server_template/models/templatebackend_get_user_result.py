"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_user import TemplatebackendUser
from server_template import util

from server_template.models.templatebackend_user import TemplatebackendUser

class TemplatebackendGetUserResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user=None):
        """TemplatebackendGetUserResult - a model defined in OpenAPI

        :param user: The user of this TemplatebackendGetUserResult.
        :type user: TemplatebackendUser
        """
        self.openapi_types = {
            'user': TemplatebackendUser
        }

        self.attribute_map = {
            'user': 'user'
        }

        self._user = user

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendGetUserResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendGetUserResult of this TemplatebackendGetUserResult.
        :rtype: TemplatebackendGetUserResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user(self) -> TemplatebackendUser:
        """Gets the user of this TemplatebackendGetUserResult.


        :return: The user of this TemplatebackendGetUserResult.
        :rtype: TemplatebackendUser
        """
        return self._user

    @user.setter
    def user(self, user: TemplatebackendUser):
        """Sets the user of this TemplatebackendGetUserResult.


        :param user: The user of this TemplatebackendGetUserResult.
        :type user: TemplatebackendUser
        """

        self._user = user
