"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template import util


class TemplatebackendGetRiskAssessmentResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, risk_assessment=None):
        """TemplatebackendGetRiskAssessmentResult - a model defined in OpenAPI

        :param risk_assessment: The risk_assessment of this TemplatebackendGetRiskAssessmentResult.
        :type risk_assessment: List[str]
        """
        self.openapi_types = {
            'risk_assessment': List[str]
        }

        self.attribute_map = {
            'risk_assessment': 'RiskAssessment'
        }

        self._risk_assessment = risk_assessment

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendGetRiskAssessmentResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendGetRiskAssessmentResult of this TemplatebackendGetRiskAssessmentResult.
        :rtype: TemplatebackendGetRiskAssessmentResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def risk_assessment(self) -> List[str]:
        """Gets the risk_assessment of this TemplatebackendGetRiskAssessmentResult.


        :return: The risk_assessment of this TemplatebackendGetRiskAssessmentResult.
        :rtype: List[str]
        """
        return self._risk_assessment

    @risk_assessment.setter
    def risk_assessment(self, risk_assessment: List[str]):
        """Sets the risk_assessment of this TemplatebackendGetRiskAssessmentResult.


        :param risk_assessment: The risk_assessment of this TemplatebackendGetRiskAssessmentResult.
        :type risk_assessment: List[str]
        """

        self._risk_assessment = risk_assessment
