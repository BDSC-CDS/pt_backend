"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template.models.templatebackend_questionnaire_question import TemplatebackendQuestionnaireQuestion
from server_template import util

from server_template.models.templatebackend_questionnaire_question import TemplatebackendQuestionnaireQuestion

class TemplatebackendQuestionnaireVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, version=None, questions=None, published=None, created_at=None, updated_at=None):
        """TemplatebackendQuestionnaireVersion - a model defined in OpenAPI

        :param id: The id of this TemplatebackendQuestionnaireVersion.
        :type id: int
        :param version: The version of this TemplatebackendQuestionnaireVersion.
        :type version: str
        :param questions: The questions of this TemplatebackendQuestionnaireVersion.
        :type questions: List[TemplatebackendQuestionnaireQuestion]
        :param published: The published of this TemplatebackendQuestionnaireVersion.
        :type published: bool
        :param created_at: The created_at of this TemplatebackendQuestionnaireVersion.
        :type created_at: datetime
        :param updated_at: The updated_at of this TemplatebackendQuestionnaireVersion.
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': int,
            'version': str,
            'questions': List[TemplatebackendQuestionnaireQuestion],
            'published': bool,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'version': 'version',
            'questions': 'questions',
            'published': 'published',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._version = version
        self._questions = questions
        self._published = published
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendQuestionnaireVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendQuestionnaireVersion of this TemplatebackendQuestionnaireVersion.
        :rtype: TemplatebackendQuestionnaireVersion
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this TemplatebackendQuestionnaireVersion.


        :return: The id of this TemplatebackendQuestionnaireVersion.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this TemplatebackendQuestionnaireVersion.


        :param id: The id of this TemplatebackendQuestionnaireVersion.
        :type id: int
        """

        self._id = id

    @property
    def version(self) -> str:
        """Gets the version of this TemplatebackendQuestionnaireVersion.


        :return: The version of this TemplatebackendQuestionnaireVersion.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this TemplatebackendQuestionnaireVersion.


        :param version: The version of this TemplatebackendQuestionnaireVersion.
        :type version: str
        """

        self._version = version

    @property
    def questions(self) -> List[TemplatebackendQuestionnaireQuestion]:
        """Gets the questions of this TemplatebackendQuestionnaireVersion.


        :return: The questions of this TemplatebackendQuestionnaireVersion.
        :rtype: List[TemplatebackendQuestionnaireQuestion]
        """
        return self._questions

    @questions.setter
    def questions(self, questions: List[TemplatebackendQuestionnaireQuestion]):
        """Sets the questions of this TemplatebackendQuestionnaireVersion.


        :param questions: The questions of this TemplatebackendQuestionnaireVersion.
        :type questions: List[TemplatebackendQuestionnaireQuestion]
        """

        self._questions = questions

    @property
    def published(self) -> bool:
        """Gets the published of this TemplatebackendQuestionnaireVersion.


        :return: The published of this TemplatebackendQuestionnaireVersion.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published: bool):
        """Sets the published of this TemplatebackendQuestionnaireVersion.


        :param published: The published of this TemplatebackendQuestionnaireVersion.
        :type published: bool
        """

        self._published = published

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this TemplatebackendQuestionnaireVersion.


        :return: The created_at of this TemplatebackendQuestionnaireVersion.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this TemplatebackendQuestionnaireVersion.


        :param created_at: The created_at of this TemplatebackendQuestionnaireVersion.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this TemplatebackendQuestionnaireVersion.


        :return: The updated_at of this TemplatebackendQuestionnaireVersion.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this TemplatebackendQuestionnaireVersion.


        :param updated_at: The updated_at of this TemplatebackendQuestionnaireVersion.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
