"""NOTE: Autogenerated. Do not edit the manually."""

from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server_template.models.base_model import Model
from server_template import util


class TemplatebackendUpdatePasswordRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_password=None, new_password=None):
        """TemplatebackendUpdatePasswordRequest - a model defined in OpenAPI

        :param current_password: The current_password of this TemplatebackendUpdatePasswordRequest.
        :type current_password: str
        :param new_password: The new_password of this TemplatebackendUpdatePasswordRequest.
        :type new_password: str
        """
        self.openapi_types = {
            'current_password': str,
            'new_password': str
        }

        self.attribute_map = {
            'current_password': 'currentPassword',
            'new_password': 'newPassword'
        }

        self._current_password = current_password
        self._new_password = new_password

    @classmethod
    def from_dict(cls, dikt) -> 'TemplatebackendUpdatePasswordRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templatebackendUpdatePasswordRequest of this TemplatebackendUpdatePasswordRequest.
        :rtype: TemplatebackendUpdatePasswordRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_password(self) -> str:
        """Gets the current_password of this TemplatebackendUpdatePasswordRequest.


        :return: The current_password of this TemplatebackendUpdatePasswordRequest.
        :rtype: str
        """
        return self._current_password

    @current_password.setter
    def current_password(self, current_password: str):
        """Sets the current_password of this TemplatebackendUpdatePasswordRequest.


        :param current_password: The current_password of this TemplatebackendUpdatePasswordRequest.
        :type current_password: str
        """

        self._current_password = current_password

    @property
    def new_password(self) -> str:
        """Gets the new_password of this TemplatebackendUpdatePasswordRequest.


        :return: The new_password of this TemplatebackendUpdatePasswordRequest.
        :rtype: str
        """
        return self._new_password

    @new_password.setter
    def new_password(self, new_password: str):
        """Sets the new_password of this TemplatebackendUpdatePasswordRequest.


        :param new_password: The new_password of this TemplatebackendUpdatePasswordRequest.
        :type new_password: str
        """

        self._new_password = new_password
