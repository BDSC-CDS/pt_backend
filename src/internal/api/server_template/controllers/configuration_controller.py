"""NOTE: Autogenerated. Do not edit the manually."""

import connexion
from typing import Dict
from typing import Tuple
from typing import Union
from inspect import getmembers, isfunction, ismethod


from server_template.models.rpc_status import RpcStatus
from server_template.models.templatebackend_get_config_reply import TemplatebackendGetConfigReply
from server_template import util


#from src.internal.api.controllers import configuration_controller
#controller_functions =  [func_tupple[0] for func_tupple in getmembers(configuration_controller, isfunction)]
#needed_functions = ["config_service_get_config"]
#for op in needed_functions:
#    if op not in controller_functions:
#        raise NotImplementedError("operation " + op + " is not implemented by src.internal.api.controllers.configuration_controller")

class ConfigurationController:
    def __init__(self, controller):
        #controller_functions =  [func_tupple[0] for func_tupple in getmembers(controller, ismethod)]
        #needed_functions = ["config_service_get_config"]
        #for op in needed_functions:
        #    if op not in controller_functions:
        #        raise NotImplementedError("operation " + op + " is not implemented by provided controller")
        util.implements_interface(ConfigurationController, controller)

        self.controller=controller


    def config_service_get_config(self, user, id: int):
        """Get a configuration file

        This endpoint returns a configuration file for a given user

        :param id: 
        :type id: int

        :rtype: Union[TemplatebackendGetConfigReply, Tuple[TemplatebackendGetConfigReply, int], Tuple[TemplatebackendGetConfigReply, int, Dict[str, str]]
        """

        return self.controller.config_service_get_config(user, id)
