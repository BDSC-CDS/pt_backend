"""NOTE: Autogenerated. Do not edit the manually."""

import connexion
from typing import Dict
from typing import Tuple
from typing import Union
from inspect import getmembers, isfunction, ismethod


from server_template.models.rpc_status import RpcStatus
from server_template.models.templatebackend_get_risk_assessment_reply import TemplatebackendGetRiskAssessmentReply
from server_template import util


#from src.internal.api.controllers import risk_assessment_service_controller
#controller_functions =  [func_tupple[0] for func_tupple in getmembers(risk_assessment_service_controller, isfunction)]
#needed_functions = ["risk_assessment_service_get_risk_assessment"]
#for op in needed_functions:
#    if op not in controller_functions:
#        raise NotImplementedError("operation " + op + " is not implemented by src.internal.api.controllers.risk_assessment_service_controller")

class RiskAssessmentServiceController:
    def __init__(self, controller):
        #controller_functions =  [func_tupple[0] for func_tupple in getmembers(controller, ismethod)]
        #needed_functions = ["risk_assessment_service_get_risk_assessment"]
        #for op in needed_functions:
        #    if op not in controller_functions:
        #        raise NotImplementedError("operation " + op + " is not implemented by provided controller")
        util.implements_interface(RiskAssessmentServiceController, controller)

        self.controller=controller


    def risk_assessment_service_get_risk_assessment(self, user, datasetid: int):
        """Get risk assessment

        This endpoint allow getting a single user&#39;s risk assessment

        :param datasetid: 
        :type datasetid: int

        :rtype: Union[TemplatebackendGetRiskAssessmentReply, Tuple[TemplatebackendGetRiskAssessmentReply, int], Tuple[TemplatebackendGetRiskAssessmentReply, int, Dict[str, str]]
        """

        return self.controller.risk_assessment_service_get_risk_assessment(user, datasetid)
