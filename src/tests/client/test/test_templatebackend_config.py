# coding: utf-8

"""
    pt backend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: development.bdsc@chuv.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.templatebackend_config import TemplatebackendConfig

class TestTemplatebackendConfig(unittest.TestCase):
    """TemplatebackendConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplatebackendConfig:
        """Test TemplatebackendConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplatebackendConfig`
        """
        model = TemplatebackendConfig()
        if include_optional:
            return TemplatebackendConfig(
                id = 56,
                userid = 56,
                tenantid = 56,
                questionnaireid = 56,
                has_scramble_field = True,
                has_date_shift = True,
                hassub_field_list = True,
                hassub_field_regex = True,
                scramble_field_fields = [
                    ''
                    ],
                date_shift_lowrange = 56,
                date_shift_highrange = 56,
                sub_field_list_fields = [
                    ''
                    ],
                sub_field_list_substitute = [
                    ''
                    ],
                sub_field_list_replacement = '',
                sub_field_regex_fields = [
                    ''
                    ],
                sub_field_regex_regex = '',
                sub_field_regex_replacement = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return TemplatebackendConfig(
        )
        """

    def testTemplatebackendConfig(self):
        """Test TemplatebackendConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
