# coding: utf-8

"""
    pt backend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: development.bdsc@chuv.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.templatebackend_get_user_me_result import TemplatebackendGetUserMeResult

class TestTemplatebackendGetUserMeResult(unittest.TestCase):
    """TemplatebackendGetUserMeResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplatebackendGetUserMeResult:
        """Test TemplatebackendGetUserMeResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplatebackendGetUserMeResult`
        """
        model = TemplatebackendGetUserMeResult()
        if include_optional:
            return TemplatebackendGetUserMeResult(
                me = openapi_client.models.templatebackend_user.templatebackendUser(
                    id = 56, 
                    tenantid = 56, 
                    first_name = '', 
                    last_name = '', 
                    username = '', 
                    email = '', 
                    password = '', 
                    status = '', 
                    roles = [
                        ''
                        ], 
                    totp_enabled = True, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    password_changed = True, )
            )
        else:
            return TemplatebackendGetUserMeResult(
        )
        """

    def testTemplatebackendGetUserMeResult(self):
        """Test TemplatebackendGetUserMeResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
