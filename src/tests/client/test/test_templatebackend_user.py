# coding: utf-8

"""
    template backend authentication service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: development@taurusgroup.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import openapi_client
from openapi_client.models.templatebackend_user import TemplatebackendUser  # noqa: E501
from openapi_client.rest import ApiException

class TestTemplatebackendUser(unittest.TestCase):
    """TemplatebackendUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TemplatebackendUser
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplatebackendUser`
        """
        model = openapi_client.models.templatebackend_user.TemplatebackendUser()  # noqa: E501
        if include_optional :
            return TemplatebackendUser(
                id = '', 
                first_name = '', 
                last_name = '', 
                username = '', 
                password = '', 
                status = '', 
                roles = [
                    ''
                    ], 
                totp_enabled = True, 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                password_changed = True
            )
        else :
            return TemplatebackendUser(
        )
        """

    def testTemplatebackendUser(self):
        """Test TemplatebackendUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
