# coding: utf-8

"""
    pt backend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: development.bdsc@chuv.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.templatebackend_create_transform_config_request import TemplatebackendCreateTransformConfigRequest

class TestTemplatebackendCreateTransformConfigRequest(unittest.TestCase):
    """TemplatebackendCreateTransformConfigRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplatebackendCreateTransformConfigRequest:
        """Test TemplatebackendCreateTransformConfigRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplatebackendCreateTransformConfigRequest`
        """
        model = TemplatebackendCreateTransformConfigRequest()
        if include_optional:
            return TemplatebackendCreateTransformConfigRequest(
                config = openapi_client.models.templatebackend_transform_config.templatebackendTransformConfig(
                    id = 56, 
                    name = '', 
                    userid = 56, 
                    tenantid = 56, 
                    questionnaireid = 56, 
                    date_shift = openapi_client.models.templatebackend_date_shift_config.templatebackendDateShiftConfig(
                        lowrange = 56, 
                        highrange = 56, ), 
                    scramble_field = openapi_client.models.templatebackend_scramble_field_config.templatebackendScrambleFieldConfig(
                        fields = [
                            ''
                            ], ), 
                    sub_field_list_list = [
                        openapi_client.models.templatebackend_substitute_field_list_config.templatebackendSubstituteFieldListConfig(
                            name = '', 
                            field = '', 
                            substitution_list = [
                                ''
                                ], 
                            replacement = '', )
                        ], 
                    sub_field_regex_list = [
                        openapi_client.models.templatebackend_substitute_field_regex_config.templatebackendSubstituteFieldRegexConfig(
                            name = '', 
                            field = '', 
                            regex = '', 
                            replacement = '', )
                        ], 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return TemplatebackendCreateTransformConfigRequest(
        )
        """

    def testTemplatebackendCreateTransformConfigRequest(self):
        """Test TemplatebackendCreateTransformConfigRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
