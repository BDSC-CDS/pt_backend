# coding: utf-8

"""
    pt backend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: development.bdsc@chuv.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.templatebackend_change_types_dataset_request import TemplatebackendChangeTypesDatasetRequest

class TestTemplatebackendChangeTypesDatasetRequest(unittest.TestCase):
    """TemplatebackendChangeTypesDatasetRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplatebackendChangeTypesDatasetRequest:
        """Test TemplatebackendChangeTypesDatasetRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplatebackendChangeTypesDatasetRequest`
        """
        model = TemplatebackendChangeTypesDatasetRequest()
        if include_optional:
            return TemplatebackendChangeTypesDatasetRequest(
                dataset_id = 56,
                metadata = [
                    openapi_client.models.templatebackend_metadata.templatebackendMetadata(
                        userid = 56, 
                        tenantid = 56, 
                        dataset_id = 56, 
                        column_id = 56, 
                        column_name = '', 
                        type = '', 
                        identifier = '', 
                        is_id = True, )
                    ]
            )
        else:
            return TemplatebackendChangeTypesDatasetRequest(
        )
        """

    def testTemplatebackendChangeTypesDatasetRequest(self):
        """Test TemplatebackendChangeTypesDatasetRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
