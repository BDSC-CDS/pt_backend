# coding: utf-8

"""
    pt backend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: development.bdsc@chuv.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.templatebackend_list_questionnaire_reply import TemplatebackendListQuestionnaireReply

class TestTemplatebackendListQuestionnaireReply(unittest.TestCase):
    """TemplatebackendListQuestionnaireReply unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplatebackendListQuestionnaireReply:
        """Test TemplatebackendListQuestionnaireReply
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplatebackendListQuestionnaireReply`
        """
        model = TemplatebackendListQuestionnaireReply()
        if include_optional:
            return TemplatebackendListQuestionnaireReply(
                result = openapi_client.models.templatebackend_list_questionnaire_result.templatebackendListQuestionnaireResult(
                    questionnaires = [
                        openapi_client.models.templatebackend_questionnaire.templatebackendQuestionnaire(
                            id = 56, 
                            name = '', 
                            reply_editable = True, 
                            last_version = '', 
                            versions = [
                                openapi_client.models.templatebackend_questionnaire_version.templatebackendQuestionnaireVersion(
                                    id = 56, 
                                    version = '', 
                                    questions = [
                                        openapi_client.models.templatebackend_questionnaire_question.templatebackendQuestionnaireQuestion(
                                            id = 56, 
                                            tab = '', 
                                            question = '', 
                                            risk_weight = 56, 
                                            answer_type = '', 
                                            flag = '', 
                                            tooltip = '', 
                                            answers = [
                                                openapi_client.models.templatebackend_questionnaire_question_answer.templatebackendQuestionnaireQuestionAnswer(
                                                    id = 56, 
                                                    text = '', 
                                                    risk_level = 56, 
                                                    rule_prefills = [
                                                        openapi_client.models.templatebackend_questionnaire_question_answer_rule_prefill.templatebackendQuestionnaireQuestionAnswerRulePrefill(
                                                            id = 56, 
                                                            question_id = 56, 
                                                            answer_id = 56, 
                                                            answer_text = '', 
                                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                                        ], 
                                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                                ], 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], 
                                    published = True, 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], )
            )
        else:
            return TemplatebackendListQuestionnaireReply(
        )
        """

    def testTemplatebackendListQuestionnaireReply(self):
        """Test TemplatebackendListQuestionnaireReply"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
