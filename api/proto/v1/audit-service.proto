syntax = "proto3";
package templatebackend;
option go_package = ".;templatebackend";

// import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "template backend";
        version: "1.0";
        contact: {
            name: "template backend service";
            url: "https://gitlab.itrcs3-app.intranet.chuv/datascience/ds-template-backend";
            email: "dev@chuv.ch";
        };
    };
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";

    security_definitions: {
        security: {
            key: "Bearer";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "Authorization";
            }
        }
    }

    security: {
        security_requirement: {
            key: "Bearer";
            value: {};
        }
    }
    security: {}
};

// Message definitions for requests and responses
message AddLogRequest {
    string action = 1;
    string userId = 2;
    string details = 3;
}

message AddLogResponse {
    bool success = 1;
}

// Service definition
service AuditService {
    // Add an audit log entry
    rpc AddLog(AddLogRequest) returns (AddLogResponse) {
        option (google.api.http) = {
            post: "/api/v1/audit"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Add an audit log";
            description: "This endpoint adds an audit log entry";
            tags: "Audit";
            extensions: {
                key: "x-openapi-router-controller";
                value {string_value: "audit_controller"};
            };
        };
    };
}
