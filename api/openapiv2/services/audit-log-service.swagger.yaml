swagger: "2.0"
info:
  title: pt backend
  version: "1.0"
  contact:
    name: pt backend audit log service
    url: https://pt-backend.rdeid.unil.ch
    email: development.bdsc@chuv.ch
tags:
  - name: AuditLogService
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/audit/logs:
    get:
      summary: Get logs
      description: Gets a list of logs.
      operationId: AuditLogService_GetLogs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetLogsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - AuditLog
      x-openapi-router-controller: audit_log_controller
  /api/v1/audit/users/{userid}/logs:
    get:
      summary: Get logs for a user
      description: Gets logs for a specific user.
      operationId: AuditLogService_GetLogsForUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetLogsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: userid
          in: path
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - AuditLog
      x-openapi-router-controller: audit_log_controller
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  templatebackendAuditLog:
    type: object
    properties:
      id:
        type: integer
        format: int32
      userid:
        type: integer
        format: int32
      service:
        type: string
      action:
        type: string
      body:
        type: string
      response:
        type: string
      createdAt:
        type: string
        format: date-time
      error:
        type: boolean
  templatebackendGetLogsResponse:
    type: object
    properties:
      logs:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendAuditLog'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
  - {}
