swagger: "2.0"
info:
  title: pt backend
  version: "1.0"
  contact:
    name: pt backend configuration for sphn service
    url: https://pt-backend.rdeid.unil.ch
    email: development.bdsc@chuv.ch
tags:
  - name: ConfigService
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/rest/v1/configs/{id}:
    get:
      summary: Get a configuration file
      description: This endpoint returns a configuration file for a given user
      operationId: ConfigService_GetConfig
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetConfigReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Configuration
      x-openapi-router-controller: config_generator_controller
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  templatebackendConfig:
    type: object
    properties:
      id:
        type: integer
        format: int64
      questionnaireid:
        type: integer
        format: int64
      hasScrambleField:
        type: boolean
      hasDateShift:
        type: boolean
      hassubFieldList:
        type: boolean
      hassubFieldRegex:
        type: boolean
      scrambleFieldFields:
        type: array
        items:
          type: string
      dateShiftLowrange:
        type: integer
        format: int32
      dateShiftHighrange:
        type: integer
        format: int32
      subFieldListFields:
        type: array
        items:
          type: string
      subFieldListSubstitute:
        type: array
        items:
          type: string
      subFieldListReplacement:
        type: string
      subFieldRegexFields:
        type: array
        items:
          type: string
      subFieldRegexRegex:
        type: string
      subFieldRegexReplacement:
        type: string
      createdAt:
        type: string
        format: date-time
  templatebackendGetConfigReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetConfigResult'
  templatebackendGetConfigResult:
    type: object
    properties:
      config:
        $ref: '#/definitions/templatebackendConfig'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
  - {}
