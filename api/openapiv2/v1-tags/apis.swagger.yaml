swagger: "2.0"
info:
  title: template backend
  version: "1.0"
  contact:
    name: template backend authentication service
    url: https://template-backend.horus-graph.intranet.chuv
    email: development.bdsc@chuv.ch
tags:
  - name: AuthenticationService
  - name: IndexService
  - name: MedicationService
  - name: UserService
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/rest/v1/authentication/login:
    post:
      summary: Authenticate
      description: This endpoint authenticates a user
      operationId: AuthenticationService_Authenticate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendAuthenticationReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendCredentials'
      tags:
        - Authentication
      x-openapi-router-controller: authentication_controller
  /api/rest/v1/users:
    post:
      summary: Create a user
      description: This endpoint creates a user
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendUser'
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/me:
    get:
      summary: Get my own user
      description: This endpoint returns the details of the authenticated user
      operationId: UserService_GetUserMe
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetUserMeReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/me/password:
    put:
      summary: Update password
      description: This endpoint updates the password of the authenticated user
      operationId: UserService_UpdatePassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendUpdatePasswordReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendUpdatePasswordRequest'
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/{id}:
    get:
      summary: Get a user
      description: This endpoint returns a user
      operationId: UserService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Users
      x-openapi-router-controller: user_controller
    delete:
      summary: Delete a user
      description: This endpoint deletes a user
      operationId: UserService_DeleteUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendDeleteUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/{id}/password/reset:
    post:
      summary: Reset password
      description: This endpoint resets a user's password
      operationId: UserService_ResetPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendResetPasswordReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/v1/hello:
    get:
      summary: Get a hello
      description: This endpoint returns a hello
      operationId: IndexService_GetHello
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetHelloReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Index
      x-openapi-router-controller: index_controller
  /api/v1/hello/{identifier}:
    post:
      summary: Get a hello
      description: This endpoint returns a hello
      operationId: IndexService_CreateHello
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateHelloReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: identifier
          in: path
          required: true
          type: integer
          format: int32
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              content:
                type: string
      tags:
        - Index
      x-openapi-router-controller: index_controller
  /api/v1/medication:
    get:
      summary: List medications
      description: This endpoint allows listing a user's medications
      operationId: MedicationService_ListMedication
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendListMedicationReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
        - name: limit
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Medication
      x-openapi-router-controller: medication_controller
    post:
      summary: Create a medication
      description: This endpoint creates a medication, and its schedule
      operationId: MedicationService_CreateMedication
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateMedicationReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendCreateMedicationRequest'
      tags:
        - Medication
      x-openapi-router-controller: medication_controller
  /api/v1/medication/{id}:
    get:
      summary: Get medications
      description: This endpoint allow getting a single user's medication
      operationId: MedicationService_GetMedication
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetMedicationReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Medication
      x-openapi-router-controller: medication_controller
    delete:
      summary: Create a medication
      description: This endpoint creates a medication, and its schedule
      operationId: MedicationService_DeleteMedication
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendDeleteMedicationReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Medication
      x-openapi-router-controller: medication_controller
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  templatebackendAuthenticationReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendAuthenticationResult'
  templatebackendAuthenticationResult:
    type: object
    properties:
      token:
        type: string
  templatebackendCreateHelloReply:
    type: object
    properties:
      identifier:
        type: integer
        format: int32
      title:
        type: string
      content:
        type: string
  templatebackendCreateMedicationReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendCreateMedicationResult'
  templatebackendCreateMedicationRequest:
    type: object
    properties:
      medication:
        $ref: '#/definitions/templatebackendMedication'
    title: Message definitions for requests and responses
  templatebackendCreateMedicationResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendCreateUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendCreateUserResult'
    title: Create Users
  templatebackendCreateUserResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendCredentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      totp:
        type: string
  templatebackendDeleteMedicationReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendDeleteMedicationResult'
  templatebackendDeleteMedicationResult:
    type: object
    properties:
      success:
        type: boolean
  templatebackendDeleteUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendDeleteUserResult'
  templatebackendDeleteUserResult:
    type: object
  templatebackendGetHelloReply:
    type: object
    properties:
      content:
        type: string
  templatebackendGetMedicationReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetMedicationResult'
  templatebackendGetMedicationResult:
    type: object
    properties:
      medication:
        $ref: '#/definitions/templatebackendMedication'
  templatebackendGetUserMeReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetUserMeResult'
  templatebackendGetUserMeResult:
    type: object
    properties:
      me:
        $ref: '#/definitions/templatebackendUser'
    title: Get User (me)
  templatebackendGetUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetUserResult'
  templatebackendGetUserResult:
    type: object
    properties:
      user:
        $ref: '#/definitions/templatebackendUser'
  templatebackendListMedicationReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendListMedicationResult'
  templatebackendListMedicationResult:
    type: object
    properties:
      medications:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendMedication'
  templatebackendMedication:
    type: object
    properties:
      id:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
      name:
        type: string
      dosage:
        type: string
      frequency:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  templatebackendResetPasswordReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendResetPasswordResult'
  templatebackendResetPasswordResult:
    type: object
  templatebackendUpdatePasswordReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendUpdateUserResult'
  templatebackendUpdatePasswordRequest:
    type: object
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    title: Update User Password
  templatebackendUpdateUserResult:
    type: object
  templatebackendUser:
    type: object
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
      email:
        type: string
      password:
        type: string
      status:
        type: string
      roles:
        type: array
        items:
          type: string
      totpEnabled:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      passwordChanged:
        type: boolean
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
  - {}
