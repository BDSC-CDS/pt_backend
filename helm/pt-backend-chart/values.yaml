####################################
# pt-backend chart configuration
####################################

# This is to override the chart name.
nameOverride: "pt-backend"
fullnameOverride: ""

# This will set the replicaset count.
replicaCount: 1

# This sets the container image.
image:
  repository: registry.rdeid.unil.ch/pt-backend
  pullPolicy: IfNotPresent
  tag: "latest"
  pullSecrets:
  - name: registry-auth

# This is for setting up a service for the pt-backend deployment.
service:
  enabled: true
  type: ClusterIP
  port: 16080
  targetPort: 5000

# This block is for setting up the ingress for the pt-backend.
ingress:
  enabled: true
  host: "pt-backend-test.rdeid.unil.ch"
  tls: false # Secret name should match: {{ .Chart.Name }}-tls
  className: public
  annotations: 
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  
# This defines the persistence options, allowing to mount a PVC.
persistence:
  enabled: true
  size: 2Gi
  accessMode: ReadWriteOnce
  storageClass: microk8s-hostpath

# Deployment specific options
podAnnotations: {}
podLabels: {}
affinity: {}
tolerations: []
nodeSelector: {}
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


####################################
# PostgreSQL subchart configuration
####################################
postgresql:
  fullnameOverride: postgresql
  # This defines the authentication parameters
  auth:
    enablePostgresUser: true # Creates a user "postgres" with admin rights.
    postgresPassword: password
    database: pt_backend

  primary:
    persistence:
      enabled: true


####################################
# jupyterhub subchart configuration
####################################
jupyterhub:
  enabled: true

  ingress: 
    enabled: true
    className: public
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_clear_headers "Content-Security-Policy";
        add_header content-security-policy "frame-ancestors 'self' http://localhost:3000 https://pt-frontend-test.rdeid.unil.ch" always;
        add_header Access-Control-Allow-Origin "http://localhost:3000 https://pt-frontend-test.rdeid.unil.ch";
    hosts:
      - host: jupyterhub-test.rdeid.unil.ch
        paths:
          - path: /
            pathType: Prefix
    tls:
    - secretName: jupyterhub-tls
      hosts:
        - jupyterhub-test.rdeid.unil.ch