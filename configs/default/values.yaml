####################################
# pt-backend chart configuration
####################################

# This is to override the chart name.
nameOverride: "pt-backend"
fullnameOverride: ""

# This will set the replicaset count.
replicaCount: 1

# This sets the container image.
image:
  repository: ghcr.io/bdsc-cds/pt-backend
  pullPolicy: IfNotPresent

# Sets the secrets for the pt-backend.
# If this is empty, values are automatically generated at the release installation.
# Otherwise, the specified value will be used in the secret pt-backend-secret.
# During Helm upgrades, changes on the secrets will be reflected in the release.
secrets: {}
  # ptAdminPassword: example-password
  # jwtSecret: # 60 chars
  # adminToken: # 16 chars
  # symmetricEncryptionKey: # 32 chars 

# This is for setting up a service for the pt-backend deployment.
service:
  enabled: true
  type: ClusterIP
  port: 16080
  targetPort: 5000

# This block is for setting up the ingress for the pt-backend.
ingress:
  enabled: true
  host: "pt-backend-test.rdeid.unil.ch"
  tls: false # Secret name should match: {{ .Chart.Name }}-tls
  className: public
  annotations: 
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"

# Deployment specific options
podAnnotations: {}
podLabels: {}
affinity: {}
tolerations: []
nodeSelector: {}
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

configOverride:
  daemon:
    public_url: "https://pt-backend-test.rdeid.unil.ch"
  clients:
    arx:
      host: "http://arx-service.arx:8080/"
    jupyterhub:
      host: "https://jupyterhub-test.rdeid.unil.ch/"

####################################
# PostgreSQL subchart configuration
####################################
postgresql:
  fullnameOverride: postgresql
  # This defines the authentication parameters
  auth:
    enablePostgresUser: true # Creates a user "postgres" with admin rights.
    existingSecret: psql-secret # Secret should contain the key postgres-password
    database: pt_backend
  
  secrets: {}
      # postgresPassword: example-password # PostgreSQL won't use this value if the chart was already deployed.

  primary:
    persistence:
      enabled: true
      size: 100Gi


####################################
# jupyterhub subchart configuration
####################################
jupyterhub:
  enabled: true

  service:
    enabled: true
    type: ClusterIP
    port: 8000

  ingress:
    enabled: true
    host: jupyterhub-test.rdeid.unil.ch
    tls: true # Secret name should match: {{ .Chart.Name }}-tls
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/configuration-snippet: |
          more_clear_headers "Content-Security-Policy";
          add_header content-security-policy "frame-ancestors 'self' https://pt-frontend-test.rdeid.unil.ch" always;
          add_header Access-Control-Allow-Origin "https://pt-frontend-test.rdeid.unil.ch";
  env:
    # Allowed domains within jupyterhub iFrame
    allowedFrameDomains: "https://pt-frontend-test.rdeid.unil.ch" # Space separated list of domains

####################################
# arx-service subchart configuration
####################################
arx:
  enabled: true

  service:
    enabled: true
    type: ClusterIP
    port: 8080

  config:
    datastore:
      host: arx-postgresql
      database: WRK_ARX
      username: postgres

  postgresql:
    secrets:
      postgresPassword: example-password # This value must be specified.